@startuml
class Atuendo{
prendas:Prenda
+agregarPrenda()
}

Atuendo --> "*" Prenda

class Prenda{
material
colorP
colorS
vecesUsada
enLavado
temperaturaMaxima
tipoDePrenda()
categoria()
usar()
estaSucia()
estaPercudida()
lavar()
sacarDelLavarropa()
aptaParaTemperatura(int temperatura)
}

class Material{
tipoDeMaterial
trama
}

class Borrador{
tipoDePrenda
material
colorP
colorS
crearPrenda()
}

interface Costurero{
fabricanteParteSuperior()
fabricanteParteInferior()
fabricanteCalzado()
fabricar()
}

class CostureroSanJuan{}
class CostureroJohnston{}
class Uniforme{
prendaSuperior
prendaInferior
calzado
}

enum Categoria{
}

enum TipoDeMaterial{}
enum Trama{}

class Guardarropa {
-prendas:Prenda
+generarSugerencia(Categoria unaCategoria, int unaTemperatura):Atuendo
+prendasDisponibles(int unaTemperatura):Prenda[]
+prendaRandomDe():Prenda
}

class Tipo{
}


class ServicioMeteorologicoAccuWeather implements ServicioMeteorologico{
-api:AccuWeatherAPI
-direccion:String
-proximaExpiracion:LocalDateTime
-ultimaRespuesta:int

+consultarTemperatura():int
+consultarApi(String direccion):int
+expiro():boolean
}

interface ServicioMeteorologico {
+consultarTemperatura(String direccion):int 
}

 
Tipo --> Prenda
Categoria --> Tipo
Prenda --> Material
Material --> TipoDeMaterial
Material --> Trama
Borrador ..> Prenda
Borrador --> Material
Costurero ..> Uniforme 
CostureroSanJuan ..|> Costurero
CostureroJohnston..|> Costurero
Costurero ..> Prenda
Uniforme -->"*" Prenda
Guardarropa ..> Atuendo

@enduml
